{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/my-counter/my-counter.component.html","./src/app/my-counter/my-counter.component.ts","./src/app/reducers/counter.actions.ts","./src/app/reducers/counter.reducer.ts","./src/app/reducers/index.ts","./src/app/reducers/layout.action.ts","./src/app/reducers/layout.reducer.ts","./src/app/reducers/util.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<h1>{{ title }} app is running!</h1>\n\n<app-my-counter></app-my-counter>\n\n<hr />\n\n<lib-hello></lib-hello>","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n    title = 'ngrx-store-example';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { StoreModule } from '@ngrx/store';\nimport { HelloModule } from '@fudao/hello';\nimport { actionReducerMap } from './reducers';\nimport { MyCounterComponent } from './my-counter/my-counter.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        /**\n         * 组件\n         */\n        MyCounterComponent,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HelloModule,\n\n        /**\n         * 在 app.module.ts 中注册全局状态\n         * 多个状态属性，可以在这里引入不同的 reducer 初始化\n         */\n        StoreModule.forRoot(actionReducerMap),\n    ],\n    providers: [],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","<div>\n    <button id=\"increment\" (click)=\"increment()\">Increment</button>\n\n    <div>Current Count: {{ count$ | async }}</div>\n\n    <button id=\"decrement\" (click)=\"decrement()\">Decrement</button>\n\n    <button id=\"reset\" (click)=\"reset()\">Reset Counter</button>\n</div>","/**\n * 在组件中 DI store，然后通过 select 选中相应状态，状态变更通过 dispatch 派发\n */\nimport { Component } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { increment, decrement, reset } from '../reducers/counter.actions';\nimport { State } from '../reducers';\n\n@Component({\n    selector: 'app-my-counter',\n    templateUrl: './my-counter.component.html',\n    styleUrls: ['./my-counter.component.scss'],\n})\nexport class MyCounterComponent {\n    count$: Observable<number>;\n\n    /**\n     * 在组件中注入使用\n     * @param store Store\n     */\n    constructor(private store: Store<State>) {\n        /**\n         * 选中 count\n         */\n        this.count$ = store.pipe(select('count'));\n    }\n\n    increment() {\n        this.store.dispatch(increment());\n    }\n\n    decrement() {\n        this.store.dispatch(decrement());\n    }\n\n    reset() {\n        this.store.dispatch(reset());\n    }\n}\n","/**\n * Actions是信息的载体，它发送数据到reducer，然后reducer更新store。Actions是store能接受数据的唯一方式。\n */\n\nimport { createAction } from '@ngrx/store';\n\nexport const increment = createAction('[Counter Component] Increment');\nexport const decrement = createAction('[Counter Component] Decrement');\nexport const reset = createAction('[Counter Component] Reset');\n","/**\n * Reducers规定了行为对应的具体状态变化。它是纯函数，通过接收前一个状态和派发行为返回新对象作为下一个状态的方式来改变状态，新对象通常用Object.assign和扩展语法来实现。\n */\n\nimport { createReducer, on } from '@ngrx/store';\nimport { increment, decrement, reset } from './counter.actions';\n\nexport const initialState = 0;\n\n// tslint:disable-next-line: variable-name\nconst _counterReducer = createReducer(\n    initialState,\n    on(increment, (state) => state + 1),\n    on(decrement, (state) => state - 1),\n    on(reset, (state) => 0)\n);\n\nexport function reducer(state, action) {\n    return _counterReducer(state, action);\n}\n","import { combineReducers, compose, ActionReducer } from '@ngrx/store';\n\n/**\n * Todo 是否使用 ngrx-store-freeze 还需要进一步调研\n */\nimport { storeFreeze } from 'ngrx-store-freeze';\n\nimport * as fromCount from './counter.reducer';\nimport * as fromLayout from './layout.reducer';\n\nconst environment = { production: false };\n\nexport interface State {\n    count: number;\n    layout: fromLayout.State;\n}\n\nconst reducers = {\n    count: fromCount.reducer,\n    layout: fromLayout.reducer,\n};\n\n/**\n * 合并 reducer\n */\nconst developmentReducer: ActionReducer<State> = compose(\n    storeFreeze,\n    combineReducers\n)(reducers);\nconst productionReducer: ActionReducer<State> = combineReducers(reducers);\n\n/**\n * combineReducers 示例\n * @param state\n * @param action\n */\nexport function reducer(state: any, action: any) {\n    if (environment.production) {\n        return productionReducer(state, action);\n    } else {\n        return developmentReducer(state, action);\n    }\n}\n\n/**\n * ActionReducerMap\n */\nexport const actionReducerMap = {\n    count: fromCount.reducer,\n    reducer,\n};\n","import { Action } from '@ngrx/store';\nimport { type } from './util';\n\nexport const ActionTypes = {\n    OPEN_SIDENAV: type('[Layout] Open Sidenav'),\n    CLOSE_SIDENAV: type('[Layout] Close Sidenav'),\n};\n\nexport class OpenSidenavAction implements Action {\n    type = ActionTypes.OPEN_SIDENAV;\n}\n\nexport class CloseSidenavAction implements Action {\n    type = ActionTypes.CLOSE_SIDENAV;\n}\n\nexport type Actions = OpenSidenavAction | CloseSidenavAction;\n","/**\n * 包含 state reducer selector 的一个 reducer 示例\n */\n\nimport * as layout from './layout.action';\n\nexport interface State {\n    showSidenav: boolean;\n}\n\nconst initialState: State = {\n    showSidenav: false,\n};\n\nexport function reducer(state = initialState, action: layout.Actions): State {\n    switch (action.type) {\n        case layout.ActionTypes.CLOSE_SIDENAV:\n            return {\n                showSidenav: false,\n            };\n\n        case layout.ActionTypes.OPEN_SIDENAV:\n            return {\n                showSidenav: true,\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport const getShowSidenav = (state: State) => state.showSidenav;\n","const typeCache: { [label: string]: boolean } = {};\n\nexport function type<T>(label: T | ''): T {\n    if (typeCache[label as string]) {\n        throw new Error(`Action type \"${label}\" is not unique\"`);\n    }\n\n    typeCache[label as string] = true;\n\n    return label as T;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}